{
    "contents" : "#' @title Circ.lineplot\n#' \n#' @description\n#' Plot circRNA and host gene expression as line plot. Plot per gene-wise.\n#' @param Circ CircRNACount file. A file of circRNA read count table. First three columns are circRNA coordinates, and followed by columns for circRNA read counts, each sample per column. \n#' @param Linear LinearCount file. A file of circRNA host gene expression count table. Same configuration as CircRNACount file.\n#' @param plotrow The rownumber or rowname in the CircRNACount table corresponding the specific gene which you want to plot.\n#' @param size the text size\n#' @param ncol if groupindicator2 is provided, specify the panel layout.\n#' @param CircCoordinates BED format circRNA coordinates file. \n#' @param groupindicator1 A vector of group indicators. For example, ages. \n#' @param groupindicator2 An other vector of group indicators. For example, tissues. This indicator will be used to segement plots out.\n#' @param x x axis lable\n#' @param y y axis lable\n#' @examples data(Coordinates)\n#' data(Circ)\n#' data(Linear)\n#' Circ.lineplot(Circ,Linear,Coordinates,plotrow=10,groupindicator1=c(rep('1days',6),rep('4days',6),rep('20days',6)),groupindicator2=rep(c(rep('Female',4),rep('Male',2)),3),x='Ages')\n#' @export Circ.lineplot\nCirc.lineplot <- function(Circ,Linear,CircCoordinates,plotrow='1',size=18,ncol=2,groupindicator1=NULL,groupindicator2=NULL,x='Conditions',y='Counts'){\n  \n  require(ggplot2)\n  #require(Rmisc)\n  \n  if( !is.null(groupindicator1) & length(groupindicator1) != ncol(Circ)-3 ){\n    stop(\"If provided, the length of groupindicator1 should be equal to the number of samples.\")\n  }\n  if( !is.null(groupindicator2) & length(groupindicator2) != ncol(Circ)-3 ){\n    stop(\"If provided, the length of groupindicator2 should be equal to the number of samples.\")\n  }\n  if(is.null(groupindicator1)){\n    stop(\"At least one grouping should be provided through groupindicator1.\")\n  }\n  if(!is.null(groupindicator2)){\n    twolevel <- TRUE\n  }else{\n    twolevel <- FALSE\n  }\n  \n  Circ <- data.frame(lapply(Circ, as.character), stringsAsFactors=FALSE)\n  Linear <- data.frame(lapply(Linear, as.character), stringsAsFactors=FALSE)\n  CircCoordinates <- data.frame(lapply(CircCoordinates, as.character), stringsAsFactors=FALSE)\n  \n  groupindicator1 <- as.factor(groupindicator1)\n  groupindicator2 <- as.factor(groupindicator2)\n\n  # Get gene name, if no annotation, output NA\n  genename = as.character(CircCoordinates[plotrow,4])\n  if (genename == '.'){\n    genename = NA\n  }\n  \n  plot.func <- function(row=plotrow){\n    if(twolevel){\n      plotdat <- summarySE(data.frame(Counts=c(as.numeric(Circ[row,-c(1:3)]),as.numeric(Linear[row,-c(1:3)])),\n                                      groupindicator1,\n                                      groupindicator2,\n                                      Type=c(rep('circRNA',ncol(Circ)-3),rep('linear RNA',ncol(Circ)-3))\n      ), measurevar='Counts',groupvars=c('Type','groupindicator1','groupindicator2') )\n    }else{\n      plotdat <- summarySE(data.frame(Counts=c(as.numeric(Circ[row,-c(1:3)]),as.numeric(Linear[row,-c(1:3)])),\n                                      groupindicator1,\n                                      Type=c(rep('circRNA',ncol(Circ)-3),rep('linear RNA',ncol(Circ)-3))\n      ), measurevar='Counts',groupvars=c('Type','groupindicator1') )\n    }\n\n    Q=ggplot(plotdat, aes(x=groupindicator1, y=Counts, group=Type,colour=Type)) +   \n      theme(text=element_text(size=size))+\n      theme_bw()+\n      labs( list(title=paste(toString(Circ[row,c(1:3)]),genename,sep=\" \"),x=x,y=y) ) +\n      ggtitle(toString(Circ[row,c(1:3)]))+\n      geom_errorbar(aes(ymin=Counts-se, ymax=Counts+se), width=.1, position=position_dodge(.1) ) +   \n      geom_line(position=position_dodge(.1)) +\n      geom_point(position=position_dodge(.1))\n    if (twolevel){\n      Q = Q + facet_wrap( ~ groupindicator2,ncol=ceiling(sqrt(length(levels(groupindicator2)))) )\n    }\n    \n    return(Q)\n  }\n  \n  return(plot.func(row=plotrow))\n}",
    "created" : 1432566190961.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "672581982",
    "id" : "B3676EDD",
    "lastKnownWriteTime" : 1432841229,
    "path" : "~/Documents/Rat_project/CircTest/R/Circ.linePlot.R",
    "project_path" : "R/Circ.linePlot.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}